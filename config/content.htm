<h1>About</h1>
<p><span>Repository</span>：<a href="https://github.com/s40723111/cd2020">https://github.com/s40723111/cd2020</a></p>
<p>Blog:<a href="https://s40723111.github.io/cd2020/blog/index.html">https://s40723111.github.io/cd2020/blog</a></p>
<p><span>Presentation：<a href="https://s40723111.github.io/cd2020/reveal/index.html#/">https://s40723111.github.io/cd2020/reveal/index.html#/</a></span></p>
<p><span>Group Repository：<a href="https://github.com/s40723138/cd2020ag4">https://github.com/s40723138/cd2020ag4</a></span></p>
<p>Group Website：<a href="https://s40723138.github.io/cd2020ag4/content/index.html">https://s40723138.github.io/cd2020ag4/content/index.html</a></p>
<p></p>
<h1>week</h1>
<h2>w1</h2>
<p>創<span style="color: #ff0000;"><a href="https://github.com/s40723111/cd2020" style="color: #ff0000;">cd2020的倉儲</a></span></p>
<p>創<span style="color: #ff0000;"><a href="https://s40723111.github.io/cd2020/content/index.html" style="color: #ff0000;">網站</a> </span></p>
<p><span style="color: #000000;">步驟:</span></p>
<ol>
<li><span style="color: #000000;">登入自己得<a href="https://github.com/">gihub</a> 建立新的<span>倉儲名字叫</span>cd2020</span></li>
<li>接著執行git clone <a href="https://github.com/s40723111/cd2020">https://github.com/s40723111/cd2020</a> (自己的網址)</li>
<li>執行git submodule add <a href="https://github.com/mdecourse/cmsimde.git取得子模組資料">https://github.com/mdecourse/cmsimde.git</a> 取得子模組資料</li>
<li>將cmsimde&gt;up_dir裡的所有項目全部複製到外面cd2020裡面</li>
<li>之後cd cmsimde 輸入python -m pip install flask_cors更改模組</li>
<li>接著就能執行python wsgi.py編輯靜態網站</li>
</ol>
<h2>w2</h2>
<p>將python 3.7.3更新至3.8.2</p>
<p>1.<a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a>在這個網站上下載</p>
<p><a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a>安裝至自己可攜系統(把pip的選項去掉)。</p>
<p><img caption="false" height="308" src="/images/bandicam 2020-03-11 19-47-16-328.jpg" width="500"/></p>
<p>2.使用批次檔更改開始路徑，使用<span>Scite.exe 編輯器將原本的py373更改成新的3.8.2版本的路徑</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home_mdecourse
set HomeDrive=%Disk%:\home_mdecourse
set Home=%Disk%:\home_mdecourse
set USERPROFILE=%Disk%:\home_mdecourse

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Disk%:\py382\DLLs;%Disk%:\py382\Lib;%Disk%:\py382\Lib\site-packages;
set PYTHONHOME=%Disk%:\py382

set path_python=%Disk%:\py382;%Disk%:\py382\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
REM coreutils is for compiling fossil scm
set path_coreutils=%Disk%:\coreutils-5.3.0\bin;%Disk%:\depends22_x64;
set path_tcc=%Disk%:\tcc;
set path_cmake=%Disk%:\cmake-3.10.1-win64-x64\bin;
set path_nodejs=Disk%:\nodejs;%Disk%:\nodejs\appdata\roaming\npm;
set path_git=%Disk%:\portablegit\bin;
set path_xming=%Disk%:\Xming;
set path_latex=%%Disk%:\Pandoc;%Disk%:\TinyTeX\bin\win32;

path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe

start /MIN %Disk%:\wscite415\wscite\SciTE.exe
start /MIN %Disk%:\wscite415\wscite\SciTE.exe

Exit</pre>
<p><span>3.執行get-pip.py (取得安裝管理工具)</span></p>
<p><span><img caption="false" height="360" src="/images/bandicam 2020-03-11 20-09-44-429.jpg" width="600"/></span></p>
<p><span>4.執行pip install指令將</span></p>
<p><strong>Flask</strong></p>
<p><strong>Markdown</strong></p>
<p><strong>lxml</strong></p>
<p><strong>bs4</strong></p>
<p><strong>flask_cors</strong></p>
<p><strong>pelican</strong></p>
<p><strong>leo</strong></p>
<p><span>這些3.8.2版本缺少的模組依序安裝下來。</span></p>
<p><br/><br/><span><img caption="false" height="360" src="/images/bandicam 2020-03-11 20-10-06-961.jpg" width="600"/></span></p>
<h2>w4</h2>
<p>更新至倉儲3.8.2後，launchLeo.py會無法執行</p>
<p>解決方式:</p>
<p>1.開啟start_mdecourse.bat</p>
<p>2.進入SCiTE程式編輯器，點選Options，點選<span>open python.properties</span></p>
<p><img alt="" height="751" src="/images/5555.png" width="500"/></p>
<p>4.使用ctrl+H功能，將py373取代為<span>python3.8.2的資料夾名稱(我的是py382)</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># Define SciTE settings for Python files.

file.patterns.py=*.py;*.pyw;*.pyx;*.pxd;*.pxi
file.patterns.scons=SConstruct;SConscript

*source.patterns.python=$(file.patterns.py);

shbang.python=py

filter.python=Python (py pyw)|$(file.patterns.py)|

*filter.python=$(filter.python)

lexer.$(file.patterns.py)=python
lexer.$(file.patterns.scons)=python

*language.python=Pytho&amp;n|py||

keywordclass.python2=and as assert break class continue def del elif \
else except exec finally for from global if import in is lambda not \
or pass print raise return try while with yield

keywordclass.python3=False None True and as assert break class continue \
def del elif else except finally for from global if import in is lambda \
nonlocal not or pass raise return try while with yield

keywordclass.python=$(keywordclass.python2)

# Extra keywords for cython
keywordclass.cython=cdef cimport cpdef

keywords.$(file.patterns.py)=$(keywordclass.python) $(keywordclass.cython)
keywords.$(file.patterns.scons)=$(keywordclass.python)

# If you uncomment the 3 lines below,
# and put some words after "keywordclass2.python=",
# those words will be styled by style.python.14

#keywordclass2.python=
#keywords2.$(file.patterns.py)=$(keywordclass2.python)
#keywords2.$(file.patterns.scons)=$(keywordclass2.python)

# Use 2 sets of substyles to highlight standard library modules and
# imports from the future.
# Additional identifier sets can be added by incrementing the  next
# line's value and adding extra definitions similar to below.
substyles.python.11=2

substylewords.11.1.$(file.patterns.py)=\
__main__ _dummy_thread _thread abc aifc argparse \
array ast asynchat asyncio asyncore atexit audioop \
base64 bdb binascii binhex bisect builtins bz2 \
calendar cgi cgitb chunk cmath cmd code codecs \
codeop collections colorsys compileall concurrent \
configparser contextlib copy copyreg crypt csv \
ctypes curses datetime dbm decimal difflib dis \
distutils dummy_threading email ensurepip enum \
errno faulthandler fcntl filecmp fileinput fnmatch \
formatter fpectl fractions ftplib functools gc getopt \
getpass gettext glob grp gzip hashlib heapq hmac \
html http http imaplib imghdr importlib inspect io \
ipaddress itertools json keyword linecache locale \
logging lzma macpath mailbox mailcap marshal math \
mimetypes mmap modulefinder msilib msvcrt \
multiprocessing netrc nis nntplib numbers operator \
os os ossaudiodev parser pathlib pdb pickle \
pickletools pipes pkgutil platform plistlib poplib posix \
pprint pty pwd py_compile pyclbr queue quopri \
random re readline reprlib resource rlcompleter runpy \
sched select selectors shelve shlex shutil signal site \
smtpd smtplib sndhdr socket socketserver spwd \
sqlite3 ssl stat statistics string stringprep struct \
subprocess sunau symbol symtable sys sysconfig \
syslog tabnanny tarfile telnetlib tempfile termios \
textwrap threading time timeit tkinter token \
tokenize trace traceback tracemalloc tty turtle \
types unicodedata unittest urllib uu uuid venv warnings \
wave weakref webbrowser winreg winsound wsgiref \
xdrlib xml xmlrpc zipfile zipimport zlib
style.python.11.1=fore:#DD9900

substylewords.11.2.$(file.patterns.py)=__future__ \
with_statement unicode_literals print_function
style.python.11.2=fore:#EE00AA,italics

#~ statement.indent.$(file.patterns.py)=10 :
statement.indent.$(file.patterns.py)=5 class def elif else except finally \
for if try while with

statement.lookback.$(file.patterns.py)=0
block.start.$(file.patterns.py)=
block.end.$(file.patterns.py)=

view.indentation.examine.*.py=2

tab.timmy.whinge.level=1

#fold.quotes.python=1

comment.block.python=#~

indent.python.colon=1

# Python styles
# White space
style.python.0=fore:#808080
# Comment
style.python.1=fore:#007F00,$(font.comment)
# Number
style.python.2=fore:#007F7F
# String
style.python.3=fore:#7F007F,$(font.monospace)
# Single quoted string
style.python.4=fore:#7F007F,$(font.monospace)
# Keyword
style.python.5=fore:#00007F,bold
# Triple quotes
style.python.6=fore:#7F0000
# Triple double quotes
style.python.7=fore:#7F0000
# Class name definition
style.python.8=fore:#0000FF,bold
# Function or method name definition
style.python.9=fore:#007F7F,bold
# Operators
style.python.10=bold
# Identifiers
style.python.11=
# Comment-blocks
style.python.12=fore:#7F7F7F
# End of line where string is not closed
style.python.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Highlighted identifiers
style.python.14=fore:#407090
# Decorators
style.python.15=fore:#805000
# F-String
style.python.16=fore:#7F007F,$(font.monospace)
# Single quoted f-string
style.python.17=fore:#7F007F,$(font.monospace)
# Triple quoted f-string
style.python.18=fore:#7F0000
# Triple double quoted f-string
style.python.19=fore:#7F0000
# Matched Operators
style.python.34=fore:#0000FF,bold
style.python.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.python.style=10

if PLAT_WIN
	command.go.*.py=y:\py382\pythonw -u "$(FileNameExt)"
	command.go.subsystem.*.py=1
	command.go.*.pyw=y:\pythonw -u "$(FileNameExt)"
	command.go.subsystem.*.pyw=1
	command.build.SConscript=scons.bat --up .
	command.build.SConstruct=scons.bat .

if PLAT_GTK
	command.go.*.py=y:\py382\python -u "$(FileNameExt)"
	command.build.SConscript=scons --up .
	command.build.SConstruct=scons .

if PLAT_MAC
	command.go.*.py=python -u "$(FileNameExt)"
	command.build.SConscript=scons --up .
	command.build.SConstruct=scons .

command.name.1.$(file.patterns.py)=Syntax Check
command.1.$(file.patterns.py)=python -c "import py_compile; py_compile.compile(r'$(FilePath)')"
</pre>
<p><span>5.最後將launchleo.py檔案放入SciTE編輯器就能夠順利開啟leo Editor</span></p>
<h2>w6</h2>
<p>使用<span style="color: #ff6600;"><a href="https://studio.youtube.com/channel/UClTVJDNTydn9L8sVVI-y1Fg/livestreaming" style="color: #ff6600;">Youtube </a></span>&amp; <span style="color: #ff6600;"><a href="https://portableapps.com/apps/music_video/obs-studio-portable" style="color: #ff6600;">OBS Portable</a></span>進行直播串流</p>
<p><img caption="false" height="333" src="/images/111.png" width="500"/></p>
<p>未來將使用<a href="https://gsuite.google.com/intl/zh-tw/products/meet/?utm_source=google&amp;utm_medium=cpc&amp;utm_campaign=japac-TW-all-en-dr-bkws-all-all-remotework-e-dr-1008070&amp;utm_content=text-ad-none-none-DEV_c-CRE_427032689518-ADGP_Hybrid%20%7C%20AW%20SEM%20%7C%20BKWS%20~%20EXA%20%7C%20Hangouts%20%7C%20%5BM:1%5D%20%7C%20TW%20%7C%20EN%20%7C%20Meet-KWID_43700052562686179-kwd-341990247074-userloc_9040316-network_g&amp;utm_term=KW_google%20hangout%20meet&amp;gclid=Cj0KCQjwybD0BRDyARIsACyS8murQZB418eqBIIfJAdDJYkmEDVk-NtPqdC5cfSDpFNxAcZRsJDRH8kaAuTWEALw_wcB&amp;gclsrc=aw.ds"><span style="color: #ff6600;">Google Hangout Meet</span></a>進行線上教程</p>
<p><span style="color: #ff6600;"><a href="https://drive.google.com/file/d/1aBT_WhoTNlt_NBQERcbAYCrZ1oZARvgH/view" style="color: #ff6600;">pyslvs.exe</a></span></p>
<p><img alt="" height="315" src="/images/222.png" width="500"/></p>
<h2>w7</h2>
<p>直播測試</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hEZbNIzWe64" width="560"></iframe></p>
<h2>w8</h2>
<p>下載<span style="color: #ff0000;"><a href="https://www.coppeliarobotics.com/" style="color: #ff0000;">CoppeliaSim</a></span>，並放到可攜系統上</p>
<p>將 leo 升級到6.2.1</p>
<p>用ssh</p>
<h2>w9</h2>
<h2>w10</h2>
<p>直播分配工作</p>
<p>google API設立權限 </p>
<p><img alt="" height="382" src="/images/1111111111.png" width="500"/></p>
<h2>w11</h2>
<p><img caption="false" height="226" src="/images/777.png" width="500"/></p>
<p>出現問題</p>
<h2>w12</h2>
<p>繪製輪框(雖然已經被畫完了)</p>
<p>-<a href="https://cad.onshape.com/documents/5ea9e00840f85da94167c18f/w/3a4374f14d8845fb65a4cfd1/e/9c9fdd2fa14faf9e992ff00d">https://cad.onshape.com/documents/5ea9e00840f85da94167c18f/w/3a4374f14d8845fb65a4cfd1/e/9c9fdd2fa14faf9e992ff00d</a></p>
<p><img caption="false" height="495" src="/images/未命名.png" width="600"/></p>
<h1>直播紀錄</h1>
<p>w2</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/e89PLiLRle8" width="560"></iframe></p>
<p>w4</p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-MoaduLrKiI" width="560"></iframe></p>
<p>w6</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ihUp_mp5FRY" width="560"></iframe></p>
<p>w7</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/OSKbrzVS9cs" width="560"></iframe></p>
<p>w10</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/qvnw7KaMm_8" width="560"></iframe></p>
<p>w13</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xFM1NzUYCZA" width="560"></iframe></p>
<div id="gtx-trans" style="position: absolute; left: -21px; top: 2073.89px;">
<div class="gtx-trans-icon"></div>
</div><h1>Webot</h1>
<p><a href="https://cyberbotics.com/doc/guide/menu">https://cyberbotics.com/doc/guide/menu</a></p>
<h2>Camera Sensors</h2>
<p><span>對於大多數應用程序而言，添加通用的</span><span>Camera</span><span>節點就足夠了。通用相機是可自定義的（分辨率，視野，噪點等），默認情況下包括變焦和聚焦機制。提供特殊效果，例如運動模糊，各種噪聲模型，鏡頭畸變和使用球形投影。</span><span><span>除了添加通用的</span></span><span><span>Camera</span></span><span><span>節點外，Webot中還提供了一些預定義的Camera模型。</span></span></p>
<p><strong>Smart Camera</strong></p>
<p><span>如果將識別</span><span>節點添加到相機，則相機不僅可以返回圖像，而且還可以返回相機圖像中檢測到的所有對象及其大小和位置。因此，模擬諸如Mobileye之類的智能相機非常容易。</span></p>
<figure name="smart-camera-output"><img alt="smart_camera.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/smart_camera.png"/>
<figcaption class="anchor-header"></figcaption>
<figcaption class="anchor-header"><strong>MultiSense S21</strong></figcaption>
<figcaption class="anchor-header"><strong></strong></figcaption>
<figcaption class="anchor-header">
<p><span>它</span><code>MultiSense S21</code><span>是基於立體相機的距離傳感器。</span></p>
<p><span><span>我們的傳感器模型包括多個Webots設備。</span></span></p>
<p><span></span><code>IntertialUnit</code><span><span>存在</span><span>內部</span><span>設備以獲取設備的側傾，俯仰和偏航角。</span><span>可以使用Webots<span> </span></span></span><span><span>相機</span></span><span><span>獨立檢索立體相機的左右RGB圖像</span><span>。</span><span>或者，</span><span>可以在</span><span>設備</span><span>中央啟用</span><span>RGB<span> </span></span></span><span><span>相機</span></span><span><span>和</span></span><span><span>RangeFinder</span></span><span></span><code>MultiSense S21</code><span><span>設備。</span><span>存在這兩個“元”設備以模仿由真實設備生成的3D彩色點的雲。</span></span></p>
<p><span><span>可以</span></span><code>MultiSenseS21.name</code><span><span>使用</span></span><span><span>下表</span></span><span><span>從該</span><span>字段</span><span>計算用於從控制器檢索設備的內部設備名稱</span><span>：</span></span></p>
<figure name="internal-devices-names"><img caption="false" height="213" src="/images/55.png" width="600"/><br/>
<figcaption class="anchor-header"></figcaption>
<figcaption class="anchor-header"></figcaption>
</figure>
<p> </p>
<figure name="multisenses21-stereoscopic-camera">        <img alt="multisense_s21.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/sensors/multisense_s21.thumbnail.png"/>
<figcaption class="anchor-header"></figcaption>
<figcaption class="anchor-header">
<figure name="multisenses21-stereoscopic-camera">
<figcaption class="anchor-header">                    MultiSenseS21 stereoscopic camera</figcaption>
<figcaption class="anchor-header"></figcaption>
<figcaption class="anchor-header"></figcaption>
</figure>
<pre><code><img alt="" height="392" src="/images/444.png" width="500"/><br/></code></pre>
<p><span>該</span><code>name</code><span>字段定義</span><code>MultiSenseS21</code><span>名稱，並用於計算內部設備名稱</span><span>。</span></p>
<p><span><span>該</span></span><code>cameraWidth</code><span><span>和</span></span><code>cameraHeight</code><span><span>字段指定所有內部渲染設備（即分辨率</span></span><span><span>相機</span></span><span><span>和</span></span><span><span>測距儀</span></span><span><span>）。</span></span></p>
<p><span><span>該</span></span><code>cameraFieldOfView</code><span><span>字段指定所有內部渲染設備的水平視場。</span></span></p>
<p><span><span>該</span></span><code>cameraNoise</code><span><span>字段指定所有內部渲染設備的噪聲（參見</span></span><code>Camera.noise</code><span><span>）。</span></span></p>
<p><span><span>該</span></span><code>rangeFinderNoise</code><span><span>字段指定內部meta RangeFinder的噪聲（參見</span></span><code>RangeFinder.noise</code><span><span>）。</span></span></p>
<p><span><span>該</span></span><code>rangeFinderMaxRange</code><span><span>字段指定內部meta RangeFinder的最大範圍（參見</span></span><code>RangeFinder.maxRange</code><span><span>）。</span></span></p>
<p><span><span>的</span></span><code>leftCamera</code><span><span>，</span></span><code>rightCamera</code><span><span>，</span></span><code>metaCamera</code><span><span>和</span></span><code>metaRangeFinder</code><span><span>字段允許以使相應的內部再現設備。</span></span></p>
<p><span><span>該</span></span><code>enablePhysics</code><span><span>字段指定傳感器是否應受物理影響（質量= 1.5 [kg]）。</span></span></p>
<p></p>
</figcaption>
</figure>
</figcaption>
<figcaption class="anchor-header"><strong></strong></figcaption>
</figure>
<h2>DistanceSensor Sensors</h2>
<p>距離傳感器</p>
<p>對於大多數應用程序而言，添加通用的<a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a>節點就足夠了，因為它們是可自定義的（分辨率，lookupTable，光圈等）。</p>
<p>此外，Webot中提供了一些預定義的商業化模型，例如某些紅外傳感器。</p>
<p>Index</p>
<ul>
<li><a href="https://cyberbotics.com/doc/guide/distancesensor-sensors#sharp">Sharp</a>
<ul>
<li><a href="https://cyberbotics.com/doc/guide/distancesensor-sensors#sharp-gp2d120">Sharp GP2D120</a></li>
<li><a href="https://cyberbotics.com/doc/guide/distancesensor-sensors#sharp-gp2y0a02yk0f">Sharp GP2Y0A02YK0F</a></li>
<li><a href="https://cyberbotics.com/doc/guide/distancesensor-sensors#sharp-gp2y0a41sk0f">Sharp GP2Y0A41SK0F</a></li>
<li><a href="https://cyberbotics.com/doc/guide/distancesensor-sensors#sharp-gp2y0a710k0f">Sharp GP2Y0A710K0F</a></li>
</ul>
</li>
</ul>
<p>Sharp</p>
<p>Sharp GP2D120</p>
<p><img caption="false" height="128" src="/images/bandicam 2020-04-11 17-58-29-720.jpg" width="300"/></p>
<p>Sharp GP2D120</p>
<p><a href="https://www.pololu.com/file/0J157/GP2D120-DATA-SHEET.pdf">Sharp GP2D120</a>是具有集成的信號處理和模擬電壓輸出的距離測量傳感器。該設備輸出與檢測距離相對應的電壓。</p>
<p>該型號具有以下規格：</p>
<ul>
<li>effective range：4至30 [cm]</li>
<li>output type：模擬</li>
<li>response time：39 [ms]</li>
<li>start up delay：44 [毫秒]</li>
<li>average consumption：33 [毫安]</li>
</ul>
<p></p>
<p><img alt="" height="115" src="/images/bandicam%202020-04-11%2017-58-14-324.jpg" width="550"/></p>
<p><a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a>的lookupTable字段已根據<span>數據表中</span>的特性實現。</p>
<p>該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式：</p>
<ul>
<li>將米轉換為電壓：y(x) = 0.5131*x^(-0.5735)-0.6143</li>
<li>將電壓轉換為米：y(x) = 0.1594*x^(-0.8533)-0.02916</li>
</ul>
<p>Sharp GP2Y0A02YK0F</p>
<p><img caption="false" height="178" src="/images/bandicam 2020-04-11 17-58-01-894.jpg" width="300"/></p>
<p>Sharp GP2Y0A02YK0F</p>
<p><a href="https://global.sharp/products/device/lineup/data/pdf/datasheet/gp2y0a02yk_e.pdf">Sharp GP2Y0A02YK0F</a>是一個距離測量傳感器單元，PSD（位置敏感檢測器）中，一個集成的組合構成的IR-LED（紅外線發光二極管）和信號處理電路。由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。該設備輸出與檢測距離相對應的電壓。因此，該傳感器也可以用作接近傳感器。</p>
<p>該型號具有以下規格：</p>
<ul>
<li>effective range：20至150 [cm]</li>
<li>output type：模擬</li>
<li>response time：33 [ms]</li>
<li>start up delay：50 [ms]</li>
<li>average consumption：33 [毫安]</li>
</ul>
<p><img alt="" height="115" src="/images/bandicam%202020-04-11%2017-58-20-580.jpg" width="550"/></p>
<p><a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a>的lookupTable字段已根據<a href="https://global.sharp/products/device/lineup/data/pdf/datasheet/gp2y0a02yk_e.pdf"><span>數據表中</span></a>的特性實現。</p>
<p>該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式：</p>
<ul>
<li>將米轉換為電壓：y(x) = 1.784*x^(-0.4215)-1.11</li>
<li>將電壓轉換為米：y(x) = 0.7611*x^(-0.9313)-0.1252</li>
</ul>
<p>Sharp GP2Y0A41SK0F</p>
<p><img alt="" height="128" src="/images/bandicam 2020-04-11 17-58-29-720.jpg" width="300"/></p>
<p>Sharp GP2Y0A41SK0F</p>
<p><a href="https://global.sharp/products/device/lineup/data/pdf/datasheet/gp2y0a41sk_e.pdf">Sharp GP2Y0A41SK0F</a>是一個距離測量傳感器單元，PSD（位置敏感檢測器）中，一個集成的組合構成的IR-LED（紅外線發光二極管）和信號處理電路。由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。該設備輸出與檢測距離相對應的電壓。因此，該傳感器也可以用作接近傳感器。</p>
<p>該型號具有以下規格：</p>
<ul>
<li>effective range：4至30 [cm]</li>
<li>output type：模擬</li>
<li>response time：5 [ms]</li>
<li>start up delay：26 [ms]</li>
<li>average consumption：12 [mA]</li>
</ul>
<p><img alt="" height="118" src="/images/bandicam%202020-04-11%2017-58-37-926.jpg" width="550"/></p>
<p><a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a>的lookupTable字段已根據<span>數據表中</span>的特性實現。</p>
<p>該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式：</p>
<ul>
<li>將米轉換為電壓：y(x) = 0.5131*x^(-0.5735)-0.6143</li>
<li>將電壓轉換為米：y(x) = 0.1594*x^(-0.8533)-0.02916</li>
</ul>
<p>Sharp GP2Y0A710K0F</p>
<p><img alt="" height="127" src="/images/bandicam 2020-04-11 17-58-48-716.jpg" width="300"/></p>
<p>GP2Y0A710K0F</p>
<p><a href="https://global.sharp/products/device/lineup/data/pdf/datasheet/gp2y0a710k_e.pdf">Sharp GP2Y0A710K0F</a>是一個距離測量傳感器單元，PSD（位置敏感檢測器）中，一個集成的組合構成的IR-LED（紅外線發光二極管）和信號處理電路。由於採用三角測量法，物體的反射率，環境溫度和工作持續時間的變化不容易影響距離檢測。該設備輸出與檢測距離相對應的電壓。因此，該傳感器也可以用作接近傳感器。</p>
<p>該型號具有以下規格：</p>
<ul>
<li>effective range：100至550 [cm]</li>
<li>output type：模擬</li>
<li>response time：21 [ms]</li>
<li>start up delay：26 [ms]</li>
<li>average consumption：30 [毫安]</li>
</ul>
<p><img caption="false" height="105" src="/images/bandicam 2020-04-11 17-58-58-196.jpg" width="550"/></p>
<p><a href="https://cyberbotics.com/doc/reference/distancesensor">DistanceSensor</a>的lookupTable字段已根據<span>數據表中</span>的特性實現。</p>
<p>該wb_distance_sensor_get_value函數返回測量的電壓/強度。要轉換這些值，請使用以下公式：</p>
<ul>
<li>將米轉換為電壓：y(x) = 1.962*x^(-0.5214)+0.4926</li>
<li>將電壓轉換為米：y(x) = 20.24*x^(-4.76)+0.6632</li>
</ul>
<p> </p>
<div id="gtx-trans" style="position: absolute; left: -52px; top: 16393.1px;">
<div class="gtx-trans-icon"></div>
</div>